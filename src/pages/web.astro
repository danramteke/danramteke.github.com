---
import { P, Section, Link, ListItem, List, H1, H2 } from '@elements';
import Layout from 'layout:PageLayout'
import BlueSection from '../components/BlueSection.astro';
---

<Layout title="Custom web development">

A website and a webserver often play an important role in a complete app. I've got you covered here. VueJS is my preferred frontend framework, and I'm flexible if your team is already using React, Alpine, or Svelte.


 <BlueSection title="Web toolbox" style="regular">
        <div slot="left">
            <H2>Tailwind CSS</H2>
            <P>

           Tailwind is a fresh take on CSS tooling. It's utilty-first and modular out-of-the box. It's also customizable for managing themes across web properties. This website and <a href="https://www.underway.nyc">www.underway.nyc</a> both use Tailwind CSS.
            </P>

            <P><Link href="https://www.tailwindcss.com">Visit website</Link></P>
        </div>

        <div slot="middle">
            <H2>Astro</H2>

            <P>
                Astro is a relatively new static site generator. It pre-renders static React and Vue components for a fast web experience. It uses JSX style components to manage layouts and re-usable components.

                This website and <Link href="https://www.underway.nyc">www.underway.nyc</Link> are both built using Astro.

                  </P>

               <P><Link href="https://www.astro.build">Visit website</Link></P>
        </div>

        <div slot="right">
            <H2>Vapor</H2>

            <P>
             Vapor is a webapp framework written on Swift, and built on top on non-blocking IO for lightning speed.
             <Link href="https://www.underway.nyc">Underway</Link>'s server relies on Vapor, not only as a webserver, but also for background workers to fetch & transform data from the MTA.
              </P>
            <P><Link href="https://vapor.codes">Visit website</Link></P>

        </div>
    </BlueSection>


</Layout>
